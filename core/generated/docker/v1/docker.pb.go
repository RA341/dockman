// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: docker/v1/docker.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SORT_FIELD int32

const (
	SORT_FIELD_NAME       SORT_FIELD = 0
	SORT_FIELD_CPU        SORT_FIELD = 1
	SORT_FIELD_MEM        SORT_FIELD = 2
	SORT_FIELD_NETWORK_RX SORT_FIELD = 3
	SORT_FIELD_NETWORK_TX SORT_FIELD = 4
	SORT_FIELD_DISK_R     SORT_FIELD = 5
	SORT_FIELD_DISK_W     SORT_FIELD = 6
)

// Enum value maps for SORT_FIELD.
var (
	SORT_FIELD_name = map[int32]string{
		0: "NAME",
		1: "CPU",
		2: "MEM",
		3: "NETWORK_RX",
		4: "NETWORK_TX",
		5: "DISK_R",
		6: "DISK_W",
	}
	SORT_FIELD_value = map[string]int32{
		"NAME":       0,
		"CPU":        1,
		"MEM":        2,
		"NETWORK_RX": 3,
		"NETWORK_TX": 4,
		"DISK_R":     5,
		"DISK_W":     6,
	}
)

func (x SORT_FIELD) Enum() *SORT_FIELD {
	p := new(SORT_FIELD)
	*p = x
	return p
}

func (x SORT_FIELD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SORT_FIELD) Descriptor() protoreflect.EnumDescriptor {
	return file_docker_v1_docker_proto_enumTypes[0].Descriptor()
}

func (SORT_FIELD) Type() protoreflect.EnumType {
	return &file_docker_v1_docker_proto_enumTypes[0]
}

func (x SORT_FIELD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SORT_FIELD.Descriptor instead.
func (SORT_FIELD) EnumDescriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{0}
}

type ORDER int32

const (
	ORDER_DSC ORDER = 0 // default val
	ORDER_ASC ORDER = 1
)

// Enum value maps for ORDER.
var (
	ORDER_name = map[int32]string{
		0: "DSC",
		1: "ASC",
	}
	ORDER_value = map[string]int32{
		"DSC": 0,
		"ASC": 1,
	}
)

func (x ORDER) Enum() *ORDER {
	p := new(ORDER)
	*p = x
	return p
}

func (x ORDER) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER) Descriptor() protoreflect.EnumDescriptor {
	return file_docker_v1_docker_proto_enumTypes[1].Descriptor()
}

func (ORDER) Type() protoreflect.EnumType {
	return &file_docker_v1_docker_proto_enumTypes[1]
}

func (x ORDER) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER.Descriptor instead.
func (ORDER) EnumDescriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{1}
}

type ContainerLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=containerID,proto3" json:"containerID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerLogsRequest) Reset() {
	*x = ContainerLogsRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerLogsRequest) ProtoMessage() {}

func (x *ContainerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerLogsRequest.ProtoReflect.Descriptor instead.
func (*ContainerLogsRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerLogsRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type LogsMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsMessage) Reset() {
	*x = LogsMessage{}
	mi := &file_docker_v1_docker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsMessage) ProtoMessage() {}

func (x *LogsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsMessage.ProtoReflect.Descriptor instead.
func (*LogsMessage) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{1}
}

func (x *LogsMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        *SystemInfo            `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Containers    []*ContainerStats      `protobuf:"bytes,2,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{2}
}

func (x *StatsResponse) GetSystem() *SystemInfo {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *StatsResponse) GetContainers() []*ContainerStats {
	if x != nil {
		return x.Containers
	}
	return nil
}

type StatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *ComposeFile           `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	SortBy        SORT_FIELD             `protobuf:"varint,2,opt,name=sortBy,proto3,enum=docker.v1.SORT_FIELD" json:"sortBy,omitempty"`
	Order         ORDER                  `protobuf:"varint,3,opt,name=order,proto3,enum=docker.v1.ORDER" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{3}
}

func (x *StatsRequest) GetFile() *ComposeFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *StatsRequest) GetSortBy() SORT_FIELD {
	if x != nil {
		return x.SortBy
	}
	return SORT_FIELD_NAME
}

func (x *StatsRequest) GetOrder() ORDER {
	if x != nil {
		return x.Order
	}
	return ORDER_DSC
}

type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CPU           float64                `protobuf:"fixed64,1,opt,name=CPU,proto3" json:"CPU,omitempty"` // represents float64
	MemInBytes    uint64                 `protobuf:"varint,2,opt,name=memInBytes,proto3" json:"memInBytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_docker_v1_docker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{4}
}

func (x *SystemInfo) GetCPU() float64 {
	if x != nil {
		return x.CPU
	}
	return 0
}

func (x *SystemInfo) GetMemInBytes() uint64 {
	if x != nil {
		return x.MemInBytes
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ContainerList       `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetList() []*ContainerList {
	if x != nil {
		return x.List
	}
	return nil
}

type ContainerList struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageID   string                 `protobuf:"bytes,2,opt,name=imageID,proto3" json:"imageID,omitempty"`
	ImageName string                 `protobuf:"bytes,3,opt,name=imageName,proto3" json:"imageName,omitempty"`
	Status    string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Name      string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Created   string                 `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Ports     []*Port                `protobuf:"bytes,7,rep,name=ports,proto3" json:"ports,omitempty"`
	// name to use in selecting service in docker compose
	ServiceName   string `protobuf:"bytes,8,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerList) Reset() {
	*x = ContainerList{}
	mi := &file_docker_v1_docker_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerList) ProtoMessage() {}

func (x *ContainerList) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerList.ProtoReflect.Descriptor instead.
func (*ContainerList) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerList) GetImageID() string {
	if x != nil {
		return x.ImageID
	}
	return ""
}

func (x *ContainerList) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ContainerList) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContainerList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerList) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ContainerList) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ContainerList) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// ContainerInfo holds metrics for a single Docker container.
type ContainerStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the container.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// CPU usage as a percentage.
	CpuUsage float64 `protobuf:"fixed64,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// Current memory usage in bytes.
	MemoryUsage uint64 `protobuf:"varint,4,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	// Maximum memory limit in bytes.
	MemoryLimit uint64 `protobuf:"varint,5,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	// Total bytes received over the network.
	NetworkRx uint64 `protobuf:"varint,6,opt,name=network_rx,json=networkRx,proto3" json:"network_rx,omitempty"`
	// Total bytes sent over the network.
	NetworkTx uint64 `protobuf:"varint,7,opt,name=network_tx,json=networkTx,proto3" json:"network_tx,omitempty"`
	// Total bytes read from block devices.
	BlockRead uint64 `protobuf:"varint,8,opt,name=block_read,json=blockRead,proto3" json:"block_read,omitempty"`
	// Total bytes written to block devices.
	BlockWrite    uint64 `protobuf:"varint,9,opt,name=block_write,json=blockWrite,proto3" json:"block_write,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStats) Reset() {
	*x = ContainerStats{}
	mi := &file_docker_v1_docker_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStats) ProtoMessage() {}

func (x *ContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStats.ProtoReflect.Descriptor instead.
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStats) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ContainerStats) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *ContainerStats) GetMemoryLimit() uint64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *ContainerStats) GetNetworkRx() uint64 {
	if x != nil {
		return x.NetworkRx
	}
	return 0
}

func (x *ContainerStats) GetNetworkTx() uint64 {
	if x != nil {
		return x.NetworkTx
	}
	return 0
}

func (x *ContainerStats) GetBlockRead() uint64 {
	if x != nil {
		return x.BlockRead
	}
	return 0
}

func (x *ContainerStats) GetBlockWrite() uint64 {
	if x != nil {
		return x.BlockWrite
	}
	return 0
}

type Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Public        int32                  `protobuf:"varint,1,opt,name=public,proto3" json:"public,omitempty"`
	Private       int32                  `protobuf:"varint,2,opt,name=private,proto3" json:"private,omitempty"`
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_docker_v1_docker_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{8}
}

func (x *Port) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *Port) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *Port) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Port) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_docker_v1_docker_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{9}
}

type ComposeFile struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Filename         string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	SelectedServices []string               `protobuf:"bytes,2,rep,name=selectedServices,proto3" json:"selectedServices,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ComposeFile) Reset() {
	*x = ComposeFile{}
	mi := &file_docker_v1_docker_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComposeFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeFile) ProtoMessage() {}

func (x *ComposeFile) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeFile.ProtoReflect.Descriptor instead.
func (*ComposeFile) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{10}
}

func (x *ComposeFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ComposeFile) GetSelectedServices() []string {
	if x != nil {
		return x.SelectedServices
	}
	return nil
}

var File_docker_v1_docker_proto protoreflect.FileDescriptor

const file_docker_v1_docker_proto_rawDesc = "" +
	"\n" +
	"\x16docker/v1/docker.proto\x12\tdocker.v1\"8\n" +
	"\x14ContainerLogsRequest\x12 \n" +
	"\vcontainerID\x18\x01 \x01(\tR\vcontainerID\"'\n" +
	"\vLogsMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"y\n" +
	"\rStatsResponse\x12-\n" +
	"\x06system\x18\x01 \x01(\v2\x15.docker.v1.SystemInfoR\x06system\x129\n" +
	"\n" +
	"containers\x18\x02 \x03(\v2\x19.docker.v1.ContainerStatsR\n" +
	"containers\"\x91\x01\n" +
	"\fStatsRequest\x12*\n" +
	"\x04file\x18\x01 \x01(\v2\x16.docker.v1.ComposeFileR\x04file\x12-\n" +
	"\x06sortBy\x18\x02 \x01(\x0e2\x15.docker.v1.SORT_FIELDR\x06sortBy\x12&\n" +
	"\x05order\x18\x03 \x01(\x0e2\x10.docker.v1.ORDERR\x05order\">\n" +
	"\n" +
	"SystemInfo\x12\x10\n" +
	"\x03CPU\x18\x01 \x01(\x01R\x03CPU\x12\x1e\n" +
	"\n" +
	"memInBytes\x18\x02 \x01(\x04R\n" +
	"memInBytes\"<\n" +
	"\fListResponse\x12,\n" +
	"\x04list\x18\x01 \x03(\v2\x18.docker.v1.ContainerListR\x04list\"\xe6\x01\n" +
	"\rContainerList\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aimageID\x18\x02 \x01(\tR\aimageID\x12\x1c\n" +
	"\timageName\x18\x03 \x01(\tR\timageName\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x18\n" +
	"\acreated\x18\x06 \x01(\tR\acreated\x12%\n" +
	"\x05ports\x18\a \x03(\v2\x0f.docker.v1.PortR\x05ports\x12 \n" +
	"\vserviceName\x18\b \x01(\tR\vserviceName\"\x95\x02\n" +
	"\x0eContainerStats\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tcpu_usage\x18\x03 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x04 \x01(\x04R\vmemoryUsage\x12!\n" +
	"\fmemory_limit\x18\x05 \x01(\x04R\vmemoryLimit\x12\x1d\n" +
	"\n" +
	"network_rx\x18\x06 \x01(\x04R\tnetworkRx\x12\x1d\n" +
	"\n" +
	"network_tx\x18\a \x01(\x04R\tnetworkTx\x12\x1d\n" +
	"\n" +
	"block_read\x18\b \x01(\x04R\tblockRead\x12\x1f\n" +
	"\vblock_write\x18\t \x01(\x04R\n" +
	"blockWrite\"`\n" +
	"\x04Port\x12\x16\n" +
	"\x06public\x18\x01 \x01(\x05R\x06public\x12\x18\n" +
	"\aprivate\x18\x02 \x01(\x05R\aprivate\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"\a\n" +
	"\x05Empty\"U\n" +
	"\vComposeFile\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12*\n" +
	"\x10selectedServices\x18\x02 \x03(\tR\x10selectedServices*`\n" +
	"\n" +
	"SORT_FIELD\x12\b\n" +
	"\x04NAME\x10\x00\x12\a\n" +
	"\x03CPU\x10\x01\x12\a\n" +
	"\x03MEM\x10\x02\x12\x0e\n" +
	"\n" +
	"NETWORK_RX\x10\x03\x12\x0e\n" +
	"\n" +
	"NETWORK_TX\x10\x04\x12\n" +
	"\n" +
	"\x06DISK_R\x10\x05\x12\n" +
	"\n" +
	"\x06DISK_W\x10\x06*\x19\n" +
	"\x05ORDER\x12\a\n" +
	"\x03DSC\x10\x00\x12\a\n" +
	"\x03ASC\x10\x012\x81\x04\n" +
	"\rDockerService\x12;\n" +
	"\x05Start\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12:\n" +
	"\x04Stop\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12<\n" +
	"\x06Remove\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12=\n" +
	"\aRestart\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12<\n" +
	"\x06Update\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x129\n" +
	"\x04List\x12\x16.docker.v1.ComposeFile\x1a\x17.docker.v1.ListResponse\"\x00\x12<\n" +
	"\x05Stats\x12\x17.docker.v1.StatsRequest\x1a\x18.docker.v1.StatsResponse\"\x00\x12C\n" +
	"\x04Logs\x12\x1f.docker.v1.ContainerLogsRequest\x1a\x16.docker.v1.LogsMessage\"\x000\x01B\x8f\x01\n" +
	"\rcom.docker.v1B\vDockerProtoP\x01Z,github.com/RA341/dockman/generated/docker/v1\xa2\x02\x03DXX\xaa\x02\tDocker.V1\xca\x02\tDocker\\V1\xe2\x02\x15Docker\\V1\\GPBMetadata\xea\x02\n" +
	"Docker::V1b\x06proto3"

var (
	file_docker_v1_docker_proto_rawDescOnce sync.Once
	file_docker_v1_docker_proto_rawDescData []byte
)

func file_docker_v1_docker_proto_rawDescGZIP() []byte {
	file_docker_v1_docker_proto_rawDescOnce.Do(func() {
		file_docker_v1_docker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_docker_v1_docker_proto_rawDesc), len(file_docker_v1_docker_proto_rawDesc)))
	})
	return file_docker_v1_docker_proto_rawDescData
}

var file_docker_v1_docker_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_docker_v1_docker_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_docker_v1_docker_proto_goTypes = []any{
	(SORT_FIELD)(0),              // 0: docker.v1.SORT_FIELD
	(ORDER)(0),                   // 1: docker.v1.ORDER
	(*ContainerLogsRequest)(nil), // 2: docker.v1.ContainerLogsRequest
	(*LogsMessage)(nil),          // 3: docker.v1.LogsMessage
	(*StatsResponse)(nil),        // 4: docker.v1.StatsResponse
	(*StatsRequest)(nil),         // 5: docker.v1.StatsRequest
	(*SystemInfo)(nil),           // 6: docker.v1.SystemInfo
	(*ListResponse)(nil),         // 7: docker.v1.ListResponse
	(*ContainerList)(nil),        // 8: docker.v1.ContainerList
	(*ContainerStats)(nil),       // 9: docker.v1.ContainerStats
	(*Port)(nil),                 // 10: docker.v1.Port
	(*Empty)(nil),                // 11: docker.v1.Empty
	(*ComposeFile)(nil),          // 12: docker.v1.ComposeFile
}
var file_docker_v1_docker_proto_depIdxs = []int32{
	6,  // 0: docker.v1.StatsResponse.system:type_name -> docker.v1.SystemInfo
	9,  // 1: docker.v1.StatsResponse.containers:type_name -> docker.v1.ContainerStats
	12, // 2: docker.v1.StatsRequest.file:type_name -> docker.v1.ComposeFile
	0,  // 3: docker.v1.StatsRequest.sortBy:type_name -> docker.v1.SORT_FIELD
	1,  // 4: docker.v1.StatsRequest.order:type_name -> docker.v1.ORDER
	8,  // 5: docker.v1.ListResponse.list:type_name -> docker.v1.ContainerList
	10, // 6: docker.v1.ContainerList.ports:type_name -> docker.v1.Port
	12, // 7: docker.v1.DockerService.Start:input_type -> docker.v1.ComposeFile
	12, // 8: docker.v1.DockerService.Stop:input_type -> docker.v1.ComposeFile
	12, // 9: docker.v1.DockerService.Remove:input_type -> docker.v1.ComposeFile
	12, // 10: docker.v1.DockerService.Restart:input_type -> docker.v1.ComposeFile
	12, // 11: docker.v1.DockerService.Update:input_type -> docker.v1.ComposeFile
	12, // 12: docker.v1.DockerService.List:input_type -> docker.v1.ComposeFile
	5,  // 13: docker.v1.DockerService.Stats:input_type -> docker.v1.StatsRequest
	2,  // 14: docker.v1.DockerService.Logs:input_type -> docker.v1.ContainerLogsRequest
	3,  // 15: docker.v1.DockerService.Start:output_type -> docker.v1.LogsMessage
	3,  // 16: docker.v1.DockerService.Stop:output_type -> docker.v1.LogsMessage
	3,  // 17: docker.v1.DockerService.Remove:output_type -> docker.v1.LogsMessage
	3,  // 18: docker.v1.DockerService.Restart:output_type -> docker.v1.LogsMessage
	3,  // 19: docker.v1.DockerService.Update:output_type -> docker.v1.LogsMessage
	7,  // 20: docker.v1.DockerService.List:output_type -> docker.v1.ListResponse
	4,  // 21: docker.v1.DockerService.Stats:output_type -> docker.v1.StatsResponse
	3,  // 22: docker.v1.DockerService.Logs:output_type -> docker.v1.LogsMessage
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_docker_v1_docker_proto_init() }
func file_docker_v1_docker_proto_init() {
	if File_docker_v1_docker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_docker_v1_docker_proto_rawDesc), len(file_docker_v1_docker_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_docker_v1_docker_proto_goTypes,
		DependencyIndexes: file_docker_v1_docker_proto_depIdxs,
		EnumInfos:         file_docker_v1_docker_proto_enumTypes,
		MessageInfos:      file_docker_v1_docker_proto_msgTypes,
	}.Build()
	File_docker_v1_docker_proto = out.File
	file_docker_v1_docker_proto_goTypes = nil
	file_docker_v1_docker_proto_depIdxs = nil
}
