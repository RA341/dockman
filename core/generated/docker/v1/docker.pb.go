// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: docker/v1/docker.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SORT_FIELD int32

const (
	SORT_FIELD_NAME       SORT_FIELD = 0
	SORT_FIELD_CPU        SORT_FIELD = 1
	SORT_FIELD_MEM        SORT_FIELD = 2
	SORT_FIELD_NETWORK_RX SORT_FIELD = 3
	SORT_FIELD_NETWORK_TX SORT_FIELD = 4
	SORT_FIELD_DISK_R     SORT_FIELD = 5
	SORT_FIELD_DISK_W     SORT_FIELD = 6
)

// Enum value maps for SORT_FIELD.
var (
	SORT_FIELD_name = map[int32]string{
		0: "NAME",
		1: "CPU",
		2: "MEM",
		3: "NETWORK_RX",
		4: "NETWORK_TX",
		5: "DISK_R",
		6: "DISK_W",
	}
	SORT_FIELD_value = map[string]int32{
		"NAME":       0,
		"CPU":        1,
		"MEM":        2,
		"NETWORK_RX": 3,
		"NETWORK_TX": 4,
		"DISK_R":     5,
		"DISK_W":     6,
	}
)

func (x SORT_FIELD) Enum() *SORT_FIELD {
	p := new(SORT_FIELD)
	*p = x
	return p
}

func (x SORT_FIELD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SORT_FIELD) Descriptor() protoreflect.EnumDescriptor {
	return file_docker_v1_docker_proto_enumTypes[0].Descriptor()
}

func (SORT_FIELD) Type() protoreflect.EnumType {
	return &file_docker_v1_docker_proto_enumTypes[0]
}

func (x SORT_FIELD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SORT_FIELD.Descriptor instead.
func (SORT_FIELD) EnumDescriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{0}
}

type ORDER int32

const (
	ORDER_DSC ORDER = 0 // default val
	ORDER_ASC ORDER = 1
)

// Enum value maps for ORDER.
var (
	ORDER_name = map[int32]string{
		0: "DSC",
		1: "ASC",
	}
	ORDER_value = map[string]int32{
		"DSC": 0,
		"ASC": 1,
	}
)

func (x ORDER) Enum() *ORDER {
	p := new(ORDER)
	*p = x
	return p
}

func (x ORDER) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER) Descriptor() protoreflect.EnumDescriptor {
	return file_docker_v1_docker_proto_enumTypes[1].Descriptor()
}

func (ORDER) Type() protoreflect.EnumType {
	return &file_docker_v1_docker_proto_enumTypes[1]
}

func (x ORDER) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER.Descriptor instead.
func (ORDER) EnumDescriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{1}
}

// Image-related messages
type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Containers    int64                  `protobuf:"varint,1,opt,name=containers,proto3" json:"containers,omitempty"`
	Created       int64                  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ParentId      string                 `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Manifests     []*ManifestSummary     `protobuf:"bytes,7,rep,name=manifests,proto3" json:"manifests,omitempty"`
	RepoDigests   []string               `protobuf:"bytes,8,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
	RepoTags      []string               `protobuf:"bytes,9,rep,name=repo_tags,json=repoTags,proto3" json:"repo_tags,omitempty"`
	SharedSize    int64                  `protobuf:"varint,10,opt,name=shared_size,json=sharedSize,proto3" json:"shared_size,omitempty"`
	Size          int64                  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_docker_v1_docker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetContainers() int64 {
	if x != nil {
		return x.Containers
	}
	return 0
}

func (x *Image) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Image) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Image) GetManifests() []*ManifestSummary {
	if x != nil {
		return x.Manifests
	}
	return nil
}

func (x *Image) GetRepoDigests() []string {
	if x != nil {
		return x.RepoDigests
	}
	return nil
}

func (x *Image) GetRepoTags() []string {
	if x != nil {
		return x.RepoTags
	}
	return nil
}

func (x *Image) GetSharedSize() int64 {
	if x != nil {
		return x.SharedSize
	}
	return 0
}

func (x *Image) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ManifestSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Digest        string                 `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	MediaType     string                 `protobuf:"bytes,2,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestSummary) Reset() {
	*x = ManifestSummary{}
	mi := &file_docker_v1_docker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestSummary) ProtoMessage() {}

func (x *ManifestSummary) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestSummary.ProtoReflect.Descriptor instead.
func (*ManifestSummary) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{1}
}

func (x *ManifestSummary) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ManifestSummary) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ManifestSummary) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{2}
}

type ListImagesResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalDiskUsage     int64                  `protobuf:"varint,1,opt,name=totalDiskUsage,proto3" json:"totalDiskUsage,omitempty"`
	UnusedImageCount   int64                  `protobuf:"varint,2,opt,name=unusedImageCount,proto3" json:"unusedImageCount,omitempty"`
	UntaggedImageCount int64                  `protobuf:"varint,3,opt,name=untaggedImageCount,proto3" json:"untaggedImageCount,omitempty"`
	Images             []*Image               `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{3}
}

func (x *ListImagesResponse) GetTotalDiskUsage() int64 {
	if x != nil {
		return x.TotalDiskUsage
	}
	return 0
}

func (x *ListImagesResponse) GetUnusedImageCount() int64 {
	if x != nil {
		return x.UnusedImageCount
	}
	return 0
}

func (x *ListImagesResponse) GetUntaggedImageCount() int64 {
	if x != nil {
		return x.UntaggedImageCount
	}
	return 0
}

func (x *ListImagesResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type RemoveImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageIds      []string               `protobuf:"bytes,1,rep,name=imageIds,proto3" json:"imageIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveImageRequest) Reset() {
	*x = RemoveImageRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveImageRequest) ProtoMessage() {}

func (x *RemoveImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveImageRequest.ProtoReflect.Descriptor instead.
func (*RemoveImageRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveImageRequest) GetImageIds() []string {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

type RemoveImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveImageResponse) Reset() {
	*x = RemoveImageResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveImageResponse) ProtoMessage() {}

func (x *RemoveImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveImageResponse.ProtoReflect.Descriptor instead.
func (*RemoveImageResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{5}
}

type ImagePruneResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SpaceReclaimed uint64                 `protobuf:"varint,1,opt,name=SpaceReclaimed,proto3" json:"SpaceReclaimed,omitempty"`
	Deleted        []*ImagesDeleted       `protobuf:"bytes,2,rep,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ImagePruneResponse) Reset() {
	*x = ImagePruneResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePruneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePruneResponse) ProtoMessage() {}

func (x *ImagePruneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePruneResponse.ProtoReflect.Descriptor instead.
func (*ImagePruneResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{6}
}

func (x *ImagePruneResponse) GetSpaceReclaimed() uint64 {
	if x != nil {
		return x.SpaceReclaimed
	}
	return 0
}

func (x *ImagePruneResponse) GetDeleted() []*ImagesDeleted {
	if x != nil {
		return x.Deleted
	}
	return nil
}

type ImagePruneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PruneAll      bool                   `protobuf:"varint,1,opt,name=pruneAll,proto3" json:"pruneAll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagePruneRequest) Reset() {
	*x = ImagePruneRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePruneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePruneRequest) ProtoMessage() {}

func (x *ImagePruneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePruneRequest.ProtoReflect.Descriptor instead.
func (*ImagePruneRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{7}
}

func (x *ImagePruneRequest) GetPruneAll() bool {
	if x != nil {
		return x.PruneAll
	}
	return false
}

type ImagesDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deleted       string                 `protobuf:"bytes,1,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	Untagged      string                 `protobuf:"bytes,2,opt,name=Untagged,proto3" json:"Untagged,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagesDeleted) Reset() {
	*x = ImagesDeleted{}
	mi := &file_docker_v1_docker_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagesDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesDeleted) ProtoMessage() {}

func (x *ImagesDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesDeleted.ProtoReflect.Descriptor instead.
func (*ImagesDeleted) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{8}
}

func (x *ImagesDeleted) GetDeleted() string {
	if x != nil {
		return x.Deleted
	}
	return ""
}

func (x *ImagesDeleted) GetUntagged() string {
	if x != nil {
		return x.Untagged
	}
	return ""
}

// Volume-related messages
type ListVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumesRequest) Reset() {
	*x = ListVolumesRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesRequest) ProtoMessage() {}

func (x *ListVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListVolumesRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{9}
}

type ListVolumesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVolumesResponse) Reset() {
	*x = ListVolumesResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVolumesResponse) ProtoMessage() {}

func (x *ListVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVolumesResponse.ProtoReflect.Descriptor instead.
func (*ListVolumesResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{10}
}

type CreateVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{11}
}

type CreateVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{12}
}

type DeleteVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeRequest) Reset() {
	*x = DeleteVolumeRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeRequest) ProtoMessage() {}

func (x *DeleteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{13}
}

type DeleteVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVolumeResponse) Reset() {
	*x = DeleteVolumeResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeResponse) ProtoMessage() {}

func (x *DeleteVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVolumeResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{14}
}

// Network-related messages
type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksRequest.ProtoReflect.Descriptor instead.
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{15}
}

type ListNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{16}
}

type CreateNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkRequest) Reset() {
	*x = CreateNetworkRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRequest) ProtoMessage() {}

func (x *CreateNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworkRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{17}
}

type CreateNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkResponse) Reset() {
	*x = CreateNetworkResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkResponse) ProtoMessage() {}

func (x *CreateNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkResponse.ProtoReflect.Descriptor instead.
func (*CreateNetworkResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{18}
}

type DeleteNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNetworkRequest) Reset() {
	*x = DeleteNetworkRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkRequest) ProtoMessage() {}

func (x *DeleteNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkRequest.ProtoReflect.Descriptor instead.
func (*DeleteNetworkRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{19}
}

type DeleteNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNetworkResponse) Reset() {
	*x = DeleteNetworkResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkResponse) ProtoMessage() {}

func (x *DeleteNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkResponse.ProtoReflect.Descriptor instead.
func (*DeleteNetworkResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{20}
}

type ContainerLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=containerID,proto3" json:"containerID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerLogsRequest) Reset() {
	*x = ContainerLogsRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerLogsRequest) ProtoMessage() {}

func (x *ContainerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerLogsRequest.ProtoReflect.Descriptor instead.
func (*ContainerLogsRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{21}
}

func (x *ContainerLogsRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type LogsMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsMessage) Reset() {
	*x = LogsMessage{}
	mi := &file_docker_v1_docker_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsMessage) ProtoMessage() {}

func (x *LogsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsMessage.ProtoReflect.Descriptor instead.
func (*LogsMessage) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{22}
}

func (x *LogsMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        *SystemInfo            `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Containers    []*ContainerStats      `protobuf:"bytes,2,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{23}
}

func (x *StatsResponse) GetSystem() *SystemInfo {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *StatsResponse) GetContainers() []*ContainerStats {
	if x != nil {
		return x.Containers
	}
	return nil
}

type StatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *ComposeFile           `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	SortBy        SORT_FIELD             `protobuf:"varint,2,opt,name=sortBy,proto3,enum=docker.v1.SORT_FIELD" json:"sortBy,omitempty"`
	Order         ORDER                  `protobuf:"varint,3,opt,name=order,proto3,enum=docker.v1.ORDER" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_docker_v1_docker_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{24}
}

func (x *StatsRequest) GetFile() *ComposeFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *StatsRequest) GetSortBy() SORT_FIELD {
	if x != nil {
		return x.SortBy
	}
	return SORT_FIELD_NAME
}

func (x *StatsRequest) GetOrder() ORDER {
	if x != nil {
		return x.Order
	}
	return ORDER_DSC
}

type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CPU           float64                `protobuf:"fixed64,1,opt,name=CPU,proto3" json:"CPU,omitempty"` // represents float64
	MemInBytes    uint64                 `protobuf:"varint,2,opt,name=memInBytes,proto3" json:"memInBytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_docker_v1_docker_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{25}
}

func (x *SystemInfo) GetCPU() float64 {
	if x != nil {
		return x.CPU
	}
	return 0
}

func (x *SystemInfo) GetMemInBytes() uint64 {
	if x != nil {
		return x.MemInBytes
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ContainerList       `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_docker_v1_docker_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{26}
}

func (x *ListResponse) GetList() []*ContainerList {
	if x != nil {
		return x.List
	}
	return nil
}

type ContainerList struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageID   string                 `protobuf:"bytes,2,opt,name=imageID,proto3" json:"imageID,omitempty"`
	ImageName string                 `protobuf:"bytes,3,opt,name=imageName,proto3" json:"imageName,omitempty"`
	Status    string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Name      string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Created   string                 `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Ports     []*Port                `protobuf:"bytes,7,rep,name=ports,proto3" json:"ports,omitempty"`
	// name to use in selecting service in docker compose
	ServiceName   string `protobuf:"bytes,8,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerList) Reset() {
	*x = ContainerList{}
	mi := &file_docker_v1_docker_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerList) ProtoMessage() {}

func (x *ContainerList) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerList.ProtoReflect.Descriptor instead.
func (*ContainerList) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{27}
}

func (x *ContainerList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerList) GetImageID() string {
	if x != nil {
		return x.ImageID
	}
	return ""
}

func (x *ContainerList) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ContainerList) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContainerList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerList) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ContainerList) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ContainerList) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// ContainerInfo holds metrics for a single Docker container.
type ContainerStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the container.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// CPU usage as a percentage.
	CpuUsage float64 `protobuf:"fixed64,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// Current memory usage in bytes.
	MemoryUsage uint64 `protobuf:"varint,4,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	// Maximum memory limit in bytes.
	MemoryLimit uint64 `protobuf:"varint,5,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	// Total bytes received over the network.
	NetworkRx uint64 `protobuf:"varint,6,opt,name=network_rx,json=networkRx,proto3" json:"network_rx,omitempty"`
	// Total bytes sent over the network.
	NetworkTx uint64 `protobuf:"varint,7,opt,name=network_tx,json=networkTx,proto3" json:"network_tx,omitempty"`
	// Total bytes read from block devices.
	BlockRead uint64 `protobuf:"varint,8,opt,name=block_read,json=blockRead,proto3" json:"block_read,omitempty"`
	// Total bytes written to block devices.
	BlockWrite    uint64 `protobuf:"varint,9,opt,name=block_write,json=blockWrite,proto3" json:"block_write,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStats) Reset() {
	*x = ContainerStats{}
	mi := &file_docker_v1_docker_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStats) ProtoMessage() {}

func (x *ContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStats.ProtoReflect.Descriptor instead.
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{28}
}

func (x *ContainerStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStats) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ContainerStats) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *ContainerStats) GetMemoryLimit() uint64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *ContainerStats) GetNetworkRx() uint64 {
	if x != nil {
		return x.NetworkRx
	}
	return 0
}

func (x *ContainerStats) GetNetworkTx() uint64 {
	if x != nil {
		return x.NetworkTx
	}
	return 0
}

func (x *ContainerStats) GetBlockRead() uint64 {
	if x != nil {
		return x.BlockRead
	}
	return 0
}

func (x *ContainerStats) GetBlockWrite() uint64 {
	if x != nil {
		return x.BlockWrite
	}
	return 0
}

type Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Public        int32                  `protobuf:"varint,1,opt,name=public,proto3" json:"public,omitempty"`
	Private       int32                  `protobuf:"varint,2,opt,name=private,proto3" json:"private,omitempty"`
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_docker_v1_docker_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{29}
}

func (x *Port) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *Port) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *Port) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Port) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_docker_v1_docker_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{30}
}

type ComposeFile struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Filename         string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	SelectedServices []string               `protobuf:"bytes,2,rep,name=selectedServices,proto3" json:"selectedServices,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ComposeFile) Reset() {
	*x = ComposeFile{}
	mi := &file_docker_v1_docker_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComposeFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeFile) ProtoMessage() {}

func (x *ComposeFile) ProtoReflect() protoreflect.Message {
	mi := &file_docker_v1_docker_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeFile.ProtoReflect.Descriptor instead.
func (*ComposeFile) Descriptor() ([]byte, []int) {
	return file_docker_v1_docker_proto_rawDescGZIP(), []int{31}
}

func (x *ComposeFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ComposeFile) GetSelectedServices() []string {
	if x != nil {
		return x.SelectedServices
	}
	return nil
}

var File_docker_v1_docker_proto protoreflect.FileDescriptor

const file_docker_v1_docker_proto_rawDesc = "" +
	"\n" +
	"\x16docker/v1/docker.proto\x12\tdocker.v1\x1a google/protobuf/descriptor.proto\"\x8e\x03\n" +
	"\x05Image\x12\x1e\n" +
	"\n" +
	"containers\x18\x01 \x01(\x03R\n" +
	"containers\x12\x18\n" +
	"\acreated\x18\x02 \x01(\x03R\acreated\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x124\n" +
	"\x06labels\x18\x04 \x03(\v2\x1c.docker.v1.Image.LabelsEntryR\x06labels\x12\x1b\n" +
	"\tparent_id\x18\x05 \x01(\tR\bparentId\x128\n" +
	"\tmanifests\x18\a \x03(\v2\x1a.docker.v1.ManifestSummaryR\tmanifests\x12!\n" +
	"\frepo_digests\x18\b \x03(\tR\vrepoDigests\x12\x1b\n" +
	"\trepo_tags\x18\t \x03(\tR\brepoTags\x12\x1f\n" +
	"\vshared_size\x18\n" +
	" \x01(\x03R\n" +
	"sharedSize\x12\x12\n" +
	"\x04size\x18\v \x01(\x03R\x04size\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x0fManifestSummary\x12\x16\n" +
	"\x06digest\x18\x01 \x01(\tR\x06digest\x12\x1d\n" +
	"\n" +
	"media_type\x18\x02 \x01(\tR\tmediaType\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"\x13\n" +
	"\x11ListImagesRequest\"\xc2\x01\n" +
	"\x12ListImagesResponse\x12&\n" +
	"\x0etotalDiskUsage\x18\x01 \x01(\x03R\x0etotalDiskUsage\x12*\n" +
	"\x10unusedImageCount\x18\x02 \x01(\x03R\x10unusedImageCount\x12.\n" +
	"\x12untaggedImageCount\x18\x03 \x01(\x03R\x12untaggedImageCount\x12(\n" +
	"\x06images\x18\x04 \x03(\v2\x10.docker.v1.ImageR\x06images\"0\n" +
	"\x12RemoveImageRequest\x12\x1a\n" +
	"\bimageIds\x18\x01 \x03(\tR\bimageIds\"\x15\n" +
	"\x13RemoveImageResponse\"p\n" +
	"\x12ImagePruneResponse\x12&\n" +
	"\x0eSpaceReclaimed\x18\x01 \x01(\x04R\x0eSpaceReclaimed\x122\n" +
	"\adeleted\x18\x02 \x03(\v2\x18.docker.v1.ImagesDeletedR\adeleted\"/\n" +
	"\x11ImagePruneRequest\x12\x1a\n" +
	"\bpruneAll\x18\x01 \x01(\bR\bpruneAll\"E\n" +
	"\rImagesDeleted\x12\x18\n" +
	"\aDeleted\x18\x01 \x01(\tR\aDeleted\x12\x1a\n" +
	"\bUntagged\x18\x02 \x01(\tR\bUntagged\"\x14\n" +
	"\x12ListVolumesRequest\"\x15\n" +
	"\x13ListVolumesResponse\"\x15\n" +
	"\x13CreateVolumeRequest\"\x16\n" +
	"\x14CreateVolumeResponse\"\x15\n" +
	"\x13DeleteVolumeRequest\"\x16\n" +
	"\x14DeleteVolumeResponse\"\x15\n" +
	"\x13ListNetworksRequest\"\x16\n" +
	"\x14ListNetworksResponse\"\x16\n" +
	"\x14CreateNetworkRequest\"\x17\n" +
	"\x15CreateNetworkResponse\"\x16\n" +
	"\x14DeleteNetworkRequest\"\x17\n" +
	"\x15DeleteNetworkResponse\"8\n" +
	"\x14ContainerLogsRequest\x12 \n" +
	"\vcontainerID\x18\x01 \x01(\tR\vcontainerID\"'\n" +
	"\vLogsMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"y\n" +
	"\rStatsResponse\x12-\n" +
	"\x06system\x18\x01 \x01(\v2\x15.docker.v1.SystemInfoR\x06system\x129\n" +
	"\n" +
	"containers\x18\x02 \x03(\v2\x19.docker.v1.ContainerStatsR\n" +
	"containers\"\x91\x01\n" +
	"\fStatsRequest\x12*\n" +
	"\x04file\x18\x01 \x01(\v2\x16.docker.v1.ComposeFileR\x04file\x12-\n" +
	"\x06sortBy\x18\x02 \x01(\x0e2\x15.docker.v1.SORT_FIELDR\x06sortBy\x12&\n" +
	"\x05order\x18\x03 \x01(\x0e2\x10.docker.v1.ORDERR\x05order\">\n" +
	"\n" +
	"SystemInfo\x12\x10\n" +
	"\x03CPU\x18\x01 \x01(\x01R\x03CPU\x12\x1e\n" +
	"\n" +
	"memInBytes\x18\x02 \x01(\x04R\n" +
	"memInBytes\"<\n" +
	"\fListResponse\x12,\n" +
	"\x04list\x18\x01 \x03(\v2\x18.docker.v1.ContainerListR\x04list\"\xe6\x01\n" +
	"\rContainerList\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aimageID\x18\x02 \x01(\tR\aimageID\x12\x1c\n" +
	"\timageName\x18\x03 \x01(\tR\timageName\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x18\n" +
	"\acreated\x18\x06 \x01(\tR\acreated\x12%\n" +
	"\x05ports\x18\a \x03(\v2\x0f.docker.v1.PortR\x05ports\x12 \n" +
	"\vserviceName\x18\b \x01(\tR\vserviceName\"\x95\x02\n" +
	"\x0eContainerStats\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tcpu_usage\x18\x03 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x04 \x01(\x04R\vmemoryUsage\x12!\n" +
	"\fmemory_limit\x18\x05 \x01(\x04R\vmemoryLimit\x12\x1d\n" +
	"\n" +
	"network_rx\x18\x06 \x01(\x04R\tnetworkRx\x12\x1d\n" +
	"\n" +
	"network_tx\x18\a \x01(\x04R\tnetworkTx\x12\x1d\n" +
	"\n" +
	"block_read\x18\b \x01(\x04R\tblockRead\x12\x1f\n" +
	"\vblock_write\x18\t \x01(\x04R\n" +
	"blockWrite\"`\n" +
	"\x04Port\x12\x16\n" +
	"\x06public\x18\x01 \x01(\x05R\x06public\x12\x18\n" +
	"\aprivate\x18\x02 \x01(\x05R\aprivate\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"\a\n" +
	"\x05Empty\"U\n" +
	"\vComposeFile\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12*\n" +
	"\x10selectedServices\x18\x02 \x03(\tR\x10selectedServices*`\n" +
	"\n" +
	"SORT_FIELD\x12\b\n" +
	"\x04NAME\x10\x00\x12\a\n" +
	"\x03CPU\x10\x01\x12\a\n" +
	"\x03MEM\x10\x02\x12\x0e\n" +
	"\n" +
	"NETWORK_RX\x10\x03\x12\x0e\n" +
	"\n" +
	"NETWORK_TX\x10\x04\x12\n" +
	"\n" +
	"\x06DISK_R\x10\x05\x12\n" +
	"\n" +
	"\x06DISK_W\x10\x06*\x19\n" +
	"\x05ORDER\x12\a\n" +
	"\x03DSC\x10\x00\x12\a\n" +
	"\x03ASC\x10\x012\xe3\t\n" +
	"\rDockerService\x12;\n" +
	"\x05Start\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12:\n" +
	"\x04Stop\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12<\n" +
	"\x06Remove\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12=\n" +
	"\aRestart\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12<\n" +
	"\x06Update\x12\x16.docker.v1.ComposeFile\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x129\n" +
	"\x04List\x12\x16.docker.v1.ComposeFile\x1a\x17.docker.v1.ListResponse\"\x00\x12<\n" +
	"\x05Stats\x12\x17.docker.v1.StatsRequest\x1a\x18.docker.v1.StatsResponse\"\x00\x12C\n" +
	"\x04Logs\x12\x1f.docker.v1.ContainerLogsRequest\x1a\x16.docker.v1.LogsMessage\"\x000\x01\x12J\n" +
	"\tImageList\x12\x1c.docker.v1.ListImagesRequest\x1a\x1d.docker.v1.ListImagesResponse\"\x00\x12N\n" +
	"\vImageRemove\x12\x1d.docker.v1.RemoveImageRequest\x1a\x1e.docker.v1.RemoveImageResponse\"\x00\x12Q\n" +
	"\x10ImagePruneUnused\x12\x1c.docker.v1.ImagePruneRequest\x1a\x1d.docker.v1.ImagePruneResponse\"\x00\x12M\n" +
	"\n" +
	"VolumeList\x12\x1d.docker.v1.ListVolumesRequest\x1a\x1e.docker.v1.ListVolumesResponse\"\x00\x12Q\n" +
	"\fVolumeCreate\x12\x1e.docker.v1.CreateVolumeRequest\x1a\x1f.docker.v1.CreateVolumeResponse\"\x00\x12Q\n" +
	"\fVolumeDelete\x12\x1e.docker.v1.DeleteVolumeRequest\x1a\x1f.docker.v1.DeleteVolumeResponse\"\x00\x12P\n" +
	"\vNetworkList\x12\x1e.docker.v1.ListNetworksRequest\x1a\x1f.docker.v1.ListNetworksResponse\"\x00\x12T\n" +
	"\rNetworkCreate\x12\x1f.docker.v1.CreateNetworkRequest\x1a .docker.v1.CreateNetworkResponse\"\x00\x12T\n" +
	"\rNetworkDelete\x12\x1f.docker.v1.DeleteNetworkRequest\x1a .docker.v1.DeleteNetworkResponse\"\x00B\x8f\x01\n" +
	"\rcom.docker.v1B\vDockerProtoP\x01Z,github.com/RA341/dockman/generated/docker/v1\xa2\x02\x03DXX\xaa\x02\tDocker.V1\xca\x02\tDocker\\V1\xe2\x02\x15Docker\\V1\\GPBMetadata\xea\x02\n" +
	"Docker::V1b\x06proto3"

var (
	file_docker_v1_docker_proto_rawDescOnce sync.Once
	file_docker_v1_docker_proto_rawDescData []byte
)

func file_docker_v1_docker_proto_rawDescGZIP() []byte {
	file_docker_v1_docker_proto_rawDescOnce.Do(func() {
		file_docker_v1_docker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_docker_v1_docker_proto_rawDesc), len(file_docker_v1_docker_proto_rawDesc)))
	})
	return file_docker_v1_docker_proto_rawDescData
}

var file_docker_v1_docker_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_docker_v1_docker_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_docker_v1_docker_proto_goTypes = []any{
	(SORT_FIELD)(0),               // 0: docker.v1.SORT_FIELD
	(ORDER)(0),                    // 1: docker.v1.ORDER
	(*Image)(nil),                 // 2: docker.v1.Image
	(*ManifestSummary)(nil),       // 3: docker.v1.ManifestSummary
	(*ListImagesRequest)(nil),     // 4: docker.v1.ListImagesRequest
	(*ListImagesResponse)(nil),    // 5: docker.v1.ListImagesResponse
	(*RemoveImageRequest)(nil),    // 6: docker.v1.RemoveImageRequest
	(*RemoveImageResponse)(nil),   // 7: docker.v1.RemoveImageResponse
	(*ImagePruneResponse)(nil),    // 8: docker.v1.ImagePruneResponse
	(*ImagePruneRequest)(nil),     // 9: docker.v1.ImagePruneRequest
	(*ImagesDeleted)(nil),         // 10: docker.v1.ImagesDeleted
	(*ListVolumesRequest)(nil),    // 11: docker.v1.ListVolumesRequest
	(*ListVolumesResponse)(nil),   // 12: docker.v1.ListVolumesResponse
	(*CreateVolumeRequest)(nil),   // 13: docker.v1.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),  // 14: docker.v1.CreateVolumeResponse
	(*DeleteVolumeRequest)(nil),   // 15: docker.v1.DeleteVolumeRequest
	(*DeleteVolumeResponse)(nil),  // 16: docker.v1.DeleteVolumeResponse
	(*ListNetworksRequest)(nil),   // 17: docker.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),  // 18: docker.v1.ListNetworksResponse
	(*CreateNetworkRequest)(nil),  // 19: docker.v1.CreateNetworkRequest
	(*CreateNetworkResponse)(nil), // 20: docker.v1.CreateNetworkResponse
	(*DeleteNetworkRequest)(nil),  // 21: docker.v1.DeleteNetworkRequest
	(*DeleteNetworkResponse)(nil), // 22: docker.v1.DeleteNetworkResponse
	(*ContainerLogsRequest)(nil),  // 23: docker.v1.ContainerLogsRequest
	(*LogsMessage)(nil),           // 24: docker.v1.LogsMessage
	(*StatsResponse)(nil),         // 25: docker.v1.StatsResponse
	(*StatsRequest)(nil),          // 26: docker.v1.StatsRequest
	(*SystemInfo)(nil),            // 27: docker.v1.SystemInfo
	(*ListResponse)(nil),          // 28: docker.v1.ListResponse
	(*ContainerList)(nil),         // 29: docker.v1.ContainerList
	(*ContainerStats)(nil),        // 30: docker.v1.ContainerStats
	(*Port)(nil),                  // 31: docker.v1.Port
	(*Empty)(nil),                 // 32: docker.v1.Empty
	(*ComposeFile)(nil),           // 33: docker.v1.ComposeFile
	nil,                           // 34: docker.v1.Image.LabelsEntry
}
var file_docker_v1_docker_proto_depIdxs = []int32{
	34, // 0: docker.v1.Image.labels:type_name -> docker.v1.Image.LabelsEntry
	3,  // 1: docker.v1.Image.manifests:type_name -> docker.v1.ManifestSummary
	2,  // 2: docker.v1.ListImagesResponse.images:type_name -> docker.v1.Image
	10, // 3: docker.v1.ImagePruneResponse.deleted:type_name -> docker.v1.ImagesDeleted
	27, // 4: docker.v1.StatsResponse.system:type_name -> docker.v1.SystemInfo
	30, // 5: docker.v1.StatsResponse.containers:type_name -> docker.v1.ContainerStats
	33, // 6: docker.v1.StatsRequest.file:type_name -> docker.v1.ComposeFile
	0,  // 7: docker.v1.StatsRequest.sortBy:type_name -> docker.v1.SORT_FIELD
	1,  // 8: docker.v1.StatsRequest.order:type_name -> docker.v1.ORDER
	29, // 9: docker.v1.ListResponse.list:type_name -> docker.v1.ContainerList
	31, // 10: docker.v1.ContainerList.ports:type_name -> docker.v1.Port
	33, // 11: docker.v1.DockerService.Start:input_type -> docker.v1.ComposeFile
	33, // 12: docker.v1.DockerService.Stop:input_type -> docker.v1.ComposeFile
	33, // 13: docker.v1.DockerService.Remove:input_type -> docker.v1.ComposeFile
	33, // 14: docker.v1.DockerService.Restart:input_type -> docker.v1.ComposeFile
	33, // 15: docker.v1.DockerService.Update:input_type -> docker.v1.ComposeFile
	33, // 16: docker.v1.DockerService.List:input_type -> docker.v1.ComposeFile
	26, // 17: docker.v1.DockerService.Stats:input_type -> docker.v1.StatsRequest
	23, // 18: docker.v1.DockerService.Logs:input_type -> docker.v1.ContainerLogsRequest
	4,  // 19: docker.v1.DockerService.ImageList:input_type -> docker.v1.ListImagesRequest
	6,  // 20: docker.v1.DockerService.ImageRemove:input_type -> docker.v1.RemoveImageRequest
	9,  // 21: docker.v1.DockerService.ImagePruneUnused:input_type -> docker.v1.ImagePruneRequest
	11, // 22: docker.v1.DockerService.VolumeList:input_type -> docker.v1.ListVolumesRequest
	13, // 23: docker.v1.DockerService.VolumeCreate:input_type -> docker.v1.CreateVolumeRequest
	15, // 24: docker.v1.DockerService.VolumeDelete:input_type -> docker.v1.DeleteVolumeRequest
	17, // 25: docker.v1.DockerService.NetworkList:input_type -> docker.v1.ListNetworksRequest
	19, // 26: docker.v1.DockerService.NetworkCreate:input_type -> docker.v1.CreateNetworkRequest
	21, // 27: docker.v1.DockerService.NetworkDelete:input_type -> docker.v1.DeleteNetworkRequest
	24, // 28: docker.v1.DockerService.Start:output_type -> docker.v1.LogsMessage
	24, // 29: docker.v1.DockerService.Stop:output_type -> docker.v1.LogsMessage
	24, // 30: docker.v1.DockerService.Remove:output_type -> docker.v1.LogsMessage
	24, // 31: docker.v1.DockerService.Restart:output_type -> docker.v1.LogsMessage
	24, // 32: docker.v1.DockerService.Update:output_type -> docker.v1.LogsMessage
	28, // 33: docker.v1.DockerService.List:output_type -> docker.v1.ListResponse
	25, // 34: docker.v1.DockerService.Stats:output_type -> docker.v1.StatsResponse
	24, // 35: docker.v1.DockerService.Logs:output_type -> docker.v1.LogsMessage
	5,  // 36: docker.v1.DockerService.ImageList:output_type -> docker.v1.ListImagesResponse
	7,  // 37: docker.v1.DockerService.ImageRemove:output_type -> docker.v1.RemoveImageResponse
	8,  // 38: docker.v1.DockerService.ImagePruneUnused:output_type -> docker.v1.ImagePruneResponse
	12, // 39: docker.v1.DockerService.VolumeList:output_type -> docker.v1.ListVolumesResponse
	14, // 40: docker.v1.DockerService.VolumeCreate:output_type -> docker.v1.CreateVolumeResponse
	16, // 41: docker.v1.DockerService.VolumeDelete:output_type -> docker.v1.DeleteVolumeResponse
	18, // 42: docker.v1.DockerService.NetworkList:output_type -> docker.v1.ListNetworksResponse
	20, // 43: docker.v1.DockerService.NetworkCreate:output_type -> docker.v1.CreateNetworkResponse
	22, // 44: docker.v1.DockerService.NetworkDelete:output_type -> docker.v1.DeleteNetworkResponse
	28, // [28:45] is the sub-list for method output_type
	11, // [11:28] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_docker_v1_docker_proto_init() }
func file_docker_v1_docker_proto_init() {
	if File_docker_v1_docker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_docker_v1_docker_proto_rawDesc), len(file_docker_v1_docker_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_docker_v1_docker_proto_goTypes,
		DependencyIndexes: file_docker_v1_docker_proto_depIdxs,
		EnumInfos:         file_docker_v1_docker_proto_enumTypes,
		MessageInfos:      file_docker_v1_docker_proto_msgTypes,
	}.Build()
	File_docker_v1_docker_proto = out.File
	file_docker_v1_docker_proto_goTypes = nil
	file_docker_v1_docker_proto_depIdxs = nil
}
